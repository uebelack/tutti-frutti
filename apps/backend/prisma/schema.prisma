generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  auth0     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email     String   @unique
  name      String?
  picture   String?
  Game      Game[]
  role      Role     @default(USER)
}

model Category {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  emoji       String
  name        String   @unique
  description String?
  words       Word[]
  games       Game[]
}

model Word {
  id                   String    @id @default(cuid())
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt
  category             Category? @relation(fields: [categoryId], references: [id])
  text                 String    @unique
  categoryId           String?
  roundsWhereCorrect   Round[]   @relation("RoundsWhereCorrect")
  roundsWhereIncorrect Round[]   @relation("RoundsWhereIncorrect")
}

model Round {
  id             String   @id @default(cuid())
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  index          Int
  correctWord    Word     @relation("RoundsWhereCorrect", fields: [wordId], references: [id])
  incorrectWords Word[]   @relation("RoundsWhereIncorrect")
  wordId         String
  Game           Game?    @relation(fields: [gameId], references: [id])
  gameId         String?
}

model Game {
  id             String     @id @default(cuid())
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  finishedAt     DateTime?
  categories     Category[]
  user           User       @relation(fields: [userId], references: [id])
  rounds         Round[]
  score          Int        @default(0)
  fiftyFiftyUses Int        @default(0)
  skipUses       Int        @default(0)
  userId         String
  wordId         String?
}

enum Role {
  USER
  ADMIN
}
